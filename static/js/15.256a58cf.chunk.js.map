{"version":3,"sources":["components/Main/HouseBuilder/HousePreview/HousePreview.tsx","components/Main/HouseList/HouseList.tsx","components/Main/ApartmentComplexBuilder/ApartmentComplexInfo/ApartmentComplexData/ApartmentComplexData.tsx","components/Main/ApartmentComplexBuilder/ApartmentComplexInfo/HouseMatch/HouseSelect.tsx","components/Main/ApartmentComplexBuilder/ApartmentComplexInfo/HouseMatch/HouseMatch.tsx","components/Main/ApartmentComplexBuilder/ApartmentComplexInfo/ApartmentComplexImport/ApartmentComplexImport.tsx","components/Main/ApartmentComplexBuilder/ApartmentComplexInfo/MainApartmentComplexImages/MainApartmentComplexImages.tsx","components/Main/ApartmentComplexBuilder/ApartmentComplexInfo/Photos/Photos.tsx","components/Main/ApartmentComplexBuilder/ApartmentComplexInfo/VRImages/VRImages.tsx","graphql/queries/fileHistoryQuery.ts","components/Main/ApartmentComplexBuilder/ApartmentComplexInfo/ApartmentComplexHistory/ApartmentComplexHistory.tsx","components/Main/ApartmentComplexBuilder/ApartmentComplexInfo/ApartmentComplexInfo.tsx","components/shared/types/apartmentComplex.types.ts","components/shared/components/dialogs/ConfirmDialog.tsx","components/shared/components/menus/CardHeaderWithMenu.tsx","components/shared/components/dropzone/Dropzone.tsx","components/Main/Images/ImagePreview/ImagePreview.tsx","components/Main/Images/PhotoDialog/PhotoDialog.tsx","components/Main/Images/VRDialog/VRDialog.tsx","components/shared/components/misc/TitleWithEditIcon.tsx","components/Main/Images/ImageDialog/ImageDialog.tsx"],"names":["HousePreview","props","house","useParams","apartmentComplexUuid","developerUuid","useMutation","DELETE_HOUSE","refetchQueries","query","HOUSE_LIST","variables","apartmentComplexId","deleteMutation","image","images","CHESS_GRID","downloadUrl","apartmentComplexDefaultImage","CardHeaderWithMenu","title","name","to","id","MenuItem","confirmFn","onClick","a","uuid","CardActionArea","CardContent","Typography","variant","color","component","EmptyHouseWrapper","styled","div","StyledAddIcon","AddIcon","AddHouseButton","aria-label","EmptyHouseList","gutterBottom","Fab","size","HouseGrid","houses","Grid","container","spacing","alignItems","item","xs","md","map","key","HouseList","useQuery","fetchPolicy","loading","error","data","getHouses","length","ApartmentComplexData","rows","label","value","type","displayName","city","district","class","levels","sections","address","price","format","parseISO","beginDate","locale","ruLocale","endDate","getTableRows","apartmentComplex","Table","TableBody","row","TableRow","TableCell","scope","align","StyledList","List","useStyles","makeStyles","theme","createStyles","root","width","backgroundColor","palette","background","paper","inline","display","CustomOption","classes","innerProps","innerRef","imageUrl","houseDefaultImage","className","ref","selectOption","ListItemAvatar","Avatar","alt","src","ListItem","ListItemText","primary","Divider","SingleValue","HouseSelect","useState","setHouse","options","onChange","selectedValue","onSelect","isClearable","components","Option","ButtonContainer","StyledCell","HouseMatchRow","houseToMatch","onCombine","mapState","Object","keys","selectedHouse","flats","houseId","flat","omit","HouseMatch","matchMap","setValue","ASSIGN_FLATS","assignFlats","loadingImport","result","Paper","TableHead","parsedDataItem","prevStateCopy","Button","onCancel","disabled","CircularProgress","thickness","StyledLink","CsvDropzone","useDropzone","accept","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","href","ApartmentComplexImport","matching","setMatching","UPLOAD_SPREADSHEET","uploadFile","handleDrop","file","uploadApartmentComplexFile","HouseImage","img","PreviewComponent","React","open","setOpen","mode","mutation","UPLOAD_FILE","APARTMENT_COMPLEX_INFO","ImageDialog","params","MainApartmentComplexImages","ImageType","StyledFab","NewPhoto","PhotoDialog","Photos","DELETE_IMAGE","ImagePreview","imageUuid","url","toggle","state","downloadLink","NewVRImage","VRDialog","VRImages","previewImageUrl","GET_HISTORY","gql","ApartmentComplexHistory","getHistory","TableContainer","timestamp","target","StyledPaper","flexGrow","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","ApartmentComplexInfo","connect","dispatch","applyParams","setRouteParams","applyTitle","setTitle","useEffect","useRouteMatch","path","getApartmentComplex","Container","maxWidth","TitleWithEditIcon","editUrl","activeClassName","button","exact","AppBar","position","Tabs","event","newValue","Tab","VR","PHOTO","Confirmation","callbackFn","setCallbackFn","handleClose","callback","ConfirmDialog","text","cancel","heading","mainText","onClose","autoFocus","preventDefault","stopPropagation","anchorEl","setAnchorEl","menuOpen","Boolean","action","currentTarget","keepMounted","StyledDropzone","deleteImage","handleRemove","imageId","EditorContainer","ImageContainer","StyledImage","setImage","setName","previewUrl","setPreviewUrl","setTimeout","undefined","onSave","fullWidth","dropped","reader","FileReader","readAsDataURL","onloadend","e","margin","panoramaProps","haov","minYaw","maxYaw","additionalProps","HALF_VR","height","pitch","yaw","hfov","autoLoad","TitleContainer","editor","createRef","canvasScaled","current","getCroppedCanvas","fetch","toDataURL","then","res","blob","theBlob","fileName","File","onload","dragMode","ready","zoomTo","style","aspectRatio","preview","defaultValue","valueLabelDisplay","step","marks","min","max","rotateTo"],"mappings":"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","file":"static/js/15.256a58cf.chunk.js","sourcesContent":["import {useMutation} from '@apollo/react-hooks';\nimport {CardActionArea} from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport {useParams} from 'react-router';\nimport {Link} from 'react-router-dom';\nimport {apartmentComplexDefaultImage} from '../../../../core/constants';\nimport {DELETE_HOUSE} from '../../../../graphql/mutations/houseMutation';\nimport {HOUSE_LIST} from '../../../../graphql/queries/houseQuery';\nimport {Confirmation} from '../../../shared/components/dialogs/ConfirmDialog';\nimport {CardHeaderWithMenu} from '../../../shared/components/menus/CardHeaderWithMenu';\nimport {StyledCard, StyledCardMedia, StyledLink} from '../../../shared/components/styled';\nimport {House} from '../../../shared/types/house.types';\n\ninterface HousePreviewProps {\n    house: House;\n}\n\nexport function HousePreview(props: HousePreviewProps) {\n    const {house} = props;\n    const {apartmentComplexUuid, developerUuid} = useParams();\n    const [deleteMutation] = useMutation(DELETE_HOUSE, {\n        refetchQueries: [\n            {\n                query: HOUSE_LIST,\n                variables: {\n                    apartmentComplexId: apartmentComplexUuid\n                }\n            }\n        ]\n    });\n    const image = house.images.CHESS_GRID ? house.images.CHESS_GRID.downloadUrl : apartmentComplexDefaultImage;\n    return (\n        <StyledCard>\n            <CardHeaderWithMenu title={house.name}>\n                <StyledLink\n                    to={`/developers/${developerUuid}/apartmentComplex/${apartmentComplexUuid}/houseEdit/${house.id}`}\n                >\n                    <MenuItem>Редактировать</MenuItem>\n                </StyledLink>\n                <Confirmation>\n                    {(confirmFn: (cb: () => void) => void) => {\n                        return (\n                            <MenuItem\n                                onClick={() => {\n                                    confirmFn(() => async () => {\n                                        await deleteMutation({\n                                            variables: {\n                                                uuid: house.id\n                                            }\n                                        });\n                                    });\n                                }}\n                            >\n                                Удалить\n                            </MenuItem>\n                        );\n                    }}\n                </Confirmation>\n            </CardHeaderWithMenu>\n            <CardActionArea>\n                <Link\n                    to={`/developers/${developerUuid}/apartmentComplex/${apartmentComplexUuid}/house/${house.id}/info`}\n                >\n                    <StyledCardMedia image={image} title={house.name} />\n                    <CardContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" />\n                    </CardContent>\n                </Link>\n            </CardActionArea>\n        </StyledCard>\n    );\n}\n","import {useQuery} from '@apollo/react-hooks';\nimport {Grid} from '@material-ui/core';\nimport Fab from '@material-ui/core/Fab';\nimport Typography from '@material-ui/core/Typography';\nimport AddIcon from '@material-ui/icons/Add';\nimport * as React from 'react';\nimport {useParams} from 'react-router-dom';\nimport styled from 'styled-components';\nimport {HOUSE_LIST} from '../../../graphql/queries/houseQuery';\nimport {FabButtonContainer, StyledFab, StyledLink} from '../../shared/components/styled';\nimport {House} from '../../shared/types/house.types';\nimport {HousePreview} from '../HouseBuilder/HousePreview/HousePreview';\n\nconst EmptyHouseWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 16px;\n    text-align: center;\n    min-height: 320px;\n    flex-direction: column;\n`;\n\nconst StyledAddIcon = styled(AddIcon)`\n    margin-right: 8px;\n`;\n\nexport function AddHouseButton() {\n    const {apartmentComplexUuid, developerUuid} = useParams();\n    return (\n        <FabButtonContainer>\n            <StyledLink to={`/developers/${developerUuid}/apartmentComplex/${apartmentComplexUuid}/create/house`}>\n                <StyledFab color=\"secondary\" aria-label=\"add\">\n                    <AddIcon />\n                </StyledFab>\n            </StyledLink>\n        </FabButtonContainer>\n    );\n}\n\nfunction EmptyHouseList() {\n    const {apartmentComplexUuid, developerUuid} = useParams();\n    return (\n        <EmptyHouseWrapper>\n            <Typography variant=\"h4\" gutterBottom={true}>\n                У этого жилищного комлпекса еще нет домов. Желаете создать?\n            </Typography>\n            <div>\n                <StyledLink to={`/developers/${developerUuid}/apartmentComplex/${apartmentComplexUuid}/create/house`}>\n                    <Fab variant=\"extended\" size=\"medium\" color=\"primary\" aria-label=\"add\">\n                        <StyledAddIcon />\n                        Создать\n                    </Fab>\n                </StyledLink>\n            </div>\n        </EmptyHouseWrapper>\n    );\n}\n\ninterface HouseGridProps {\n    houses: House[];\n}\n\nfunction HouseGrid({houses}: HouseGridProps) {\n    return (\n        <Grid container={true} spacing={2} alignItems=\"center\">\n            <Grid item={true} xs={12} md={4}>\n                <AddHouseButton />\n            </Grid>\n            {houses.map((house) => {\n                return (\n                    <Grid item={true} xs={12} md={4} key={house.id}>\n                        <HousePreview house={house} />\n                    </Grid>\n                );\n            })}\n        </Grid>\n    );\n}\n\nexport function HouseList() {\n    const {apartmentComplexUuid} = useParams();\n    const {loading, error, data} = useQuery<{getHouses: House[]}>(HOUSE_LIST, {\n        variables: {\n            apartmentComplexId: apartmentComplexUuid\n        },\n        fetchPolicy: 'cache-and-network'\n    });\n\n    if (loading) {\n        return <p>Loading...</p>;\n    }\n    if (error || !data) {\n        return <p>Error :(</p>;\n    }\n\n    const houses = data && data.getHouses;\n    if (!houses || houses.length === 0) {\n        return <EmptyHouseList />;\n    } else {\n        return <HouseGrid houses={houses} />;\n    }\n}\n","import * as React from 'react';\nimport ruLocale from 'date-fns/locale/ru';\nimport {format, parseISO} from 'date-fns';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport {ApartmentComplexType} from '../../../../shared/types/apartmentComplex.types';\n\ninterface ApartmentComplexDataProps {\n    apartmentComplex: ApartmentComplexType;\n}\n\nfunction getTableRows(props: ApartmentComplexType) {\n    return [\n        {\n            key: 'type',\n            label: 'Тип объекта',\n            value: props.type.displayName\n        },\n        {\n            key: 'name',\n            label: 'Название',\n            value: props.name\n        },\n        {\n            key: 'city',\n            label: 'Город',\n            value: props.city.displayName\n        },\n        {\n            key: 'district',\n            label: 'Район',\n            value: props.district.displayName\n        },\n        {\n            key: 'class',\n            label: 'Класс',\n            value: props.class.displayName\n        },\n        {\n            key: 'levels',\n            label: 'Этажность',\n            value: props.levels\n        },\n        {\n            key: 'sections',\n            label: 'Количество секций',\n            value: props.sections\n        },\n        {\n            key: 'address',\n            label: 'Строительный адрес',\n            value: props.address\n        },\n        {\n            key: 'price',\n            label: 'Цена за м2',\n            value: props.price\n        },\n        {\n            key: 'beginDate',\n            label: 'Начало строительства',\n            value: format(parseISO(props.beginDate), 'MM yyyy', {\n                locale: ruLocale\n            })\n        },\n        {\n            key: 'endDate',\n            label: 'Конец строительства',\n            value: format(parseISO(props.endDate), 'MM yyyy', {\n                locale: ruLocale\n            })\n        }\n    ];\n}\n\nexport function ApartmentComplexData(props: ApartmentComplexDataProps) {\n    const rows = getTableRows(props.apartmentComplex);\n    return (\n        <Table aria-label=\"simple table\">\n            <TableBody>\n                {rows.map((row) => {\n                    return (\n                        <TableRow key={row.key}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                <Typography variant=\"body2\" component=\"p\">\n                                    {row.label}\n                                </Typography>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <Typography variant=\"body2\" component=\"p\">\n                                    {row.value}\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                    );\n                })}\n            </TableBody>\n        </Table>\n    );\n}\n","import Select from '@appgeist/react-select-material-ui';\nimport {createStyles, ListItem, makeStyles, Theme} from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport * as React from 'react';\nimport {useState} from 'react';\nimport styled from 'styled-components';\nimport {houseDefaultImage} from '../../../../../core/constants';\nimport {House} from '../../../../shared/types/house.types';\n\nconst StyledList = styled(List)`\n    display: flex;\n    padding: 8px !important;\n    align-items: center;\n    margin-left: 8px;\n    &:hover {\n        background-color: rgba(0, 0, 0, 0.08);\n        cursor: pointer;\n    }\n`;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            backgroundColor: theme.palette.background.paper\n        },\n        inline: {\n            display: 'inline'\n        }\n    })\n);\n\nfunction CustomOption(props: {data: House} & any) {\n    const classes = useStyles();\n    const {innerProps, data, innerRef} = props;\n    const imageUrl = data.images.CHESS_GRID ? data.images.CHESS_GRID.downloadUrl : houseDefaultImage;\n    return (\n        <StyledList\n            className={classes.root}\n            ref={innerRef}\n            {...innerProps}\n            onClick={() => {\n                props.selectOption(data);\n            }}\n        >\n            <ListItemAvatar>\n                <Avatar alt={data.name} src={imageUrl} />\n            </ListItemAvatar>\n            <ListItem alignItems=\"flex-start\">\n                <ListItemText primary={data.name} />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n        </StyledList>\n    );\n}\n\nfunction SingleValue({data}: any) {\n    return data.name;\n}\n\ninterface HouseSelectProps {\n    houses: House[];\n    onSelect: (house: House) => void;\n}\n\nexport function HouseSelect(props: HouseSelectProps) {\n    const [house, setHouse] = useState<House>();\n\n    return (\n        <Select\n            id=\"place\"\n            label=\"Выберите дом\"\n            options={props.houses}\n            value={house}\n            onChange={(selectedValue: House) => {\n                setHouse(selectedValue);\n                props.onSelect(selectedValue);\n            }}\n            isClearable={true}\n            components={{\n                Option: CustomOption,\n                SingleValue\n            }}\n        />\n    );\n}\n","import {useMutation, useQuery} from '@apollo/react-hooks';\nimport {Button} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport omit from 'ramda/src/omit';\nimport * as React from 'react';\nimport {useState} from 'react';\nimport styled from 'styled-components';\nimport {HOUSE_LIST} from '../../../../../graphql/queries/houseQuery';\nimport {Flat, ParsedFlat} from '../../../../shared/types/flat.types';\nimport {House} from '../../../../shared/types/house.types';\nimport {HouseSelect} from './HouseSelect';\nimport {ASSIGN_FLATS} from '../../../../../graphql/mutations/apartmentComplexMutation';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {Redirect} from 'react-router';\nimport {useParams} from 'react-router-dom';\n\ninterface ParsedHouse {\n    house: string;\n    flats: ParsedFlat[];\n}\n\ninterface HouseMatchProps {\n    data: ParsedHouse[];\n    apartmentComplexUuid: string;\n    onCancel: () => void;\n}\n\ninterface HouseMatchRowProps {\n    houseToMatch: ParsedHouse;\n    houses: House[];\n    onCombine: (house: House) => void;\n}\n\nconst ButtonContainer = styled.div`\n    display: flex;\n    padding: 16px;\n    align-items: center;\n    justify-content: flex-end;\n`;\n\nconst StyledCell = styled(TableCell)`\n    width: 50%;\n`;\n\nfunction HouseMatchRow(props: HouseMatchRowProps) {\n    return (\n        <TableRow>\n            <TableCell component=\"th\" scope=\"row\">\n                {props.houseToMatch.house}\n            </TableCell>\n            <StyledCell align=\"right\">\n                <HouseSelect houses={props.houses} onSelect={props.onCombine} />\n            </StyledCell>\n        </TableRow>\n    );\n}\n\ninterface HouseMapInterface {\n    [key: string]: {\n        selectedHouse: House;\n        flats: Flat[];\n    };\n}\n\nfunction mapState(data: HouseMapInterface) {\n    return Object.keys(data).map((key) => {\n        const {selectedHouse, flats} = data[key];\n        return {\n            houseId: selectedHouse.id,\n            flats: flats.map((flat) => {\n                return omit(['__typename'], flat);\n            })\n        };\n    });\n}\n\nexport function HouseMatch(props: HouseMatchProps) {\n    const [matchMap, setValue] = useState<any>({});\n    const {apartmentComplexUuid, developerUuid} = useParams();\n    const {loading, error, data} = useQuery<{getHouses: House[]}>(HOUSE_LIST, {\n        variables: {\n            apartmentComplexId: props.apartmentComplexUuid\n        }\n    });\n\n    const [assignFlats, {loading: loadingImport, data: result}] = useMutation(ASSIGN_FLATS);\n\n    if (error || loading || !data) {\n        return null;\n    }\n\n    if (result) {\n        return (\n            <Redirect to={`/developers/${developerUuid}/apartmentComplex/${apartmentComplexUuid}/overview/houses`} />\n        );\n    }\n\n    const houses = data.getHouses;\n    return (\n        <Paper>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Дома в файле</TableCell>\n                        <TableCell align=\"right\">Дома в системе</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.data.map((parsedDataItem: ParsedHouse) => {\n                        return (\n                            <HouseMatchRow\n                                key={parsedDataItem.house}\n                                houseToMatch={parsedDataItem}\n                                houses={houses}\n                                onCombine={(selectedHouse: House) => {\n                                    const prevStateCopy = {...matchMap};\n\n                                    if (selectedHouse === null) {\n                                        delete prevStateCopy[parsedDataItem.house];\n                                    } else {\n                                        prevStateCopy[parsedDataItem.house] = {\n                                            selectedHouse,\n                                            flats: parsedDataItem.flats\n                                        };\n                                    }\n                                    setValue(prevStateCopy);\n                                }}\n                            />\n                        );\n                    })}\n                </TableBody>\n            </Table>\n            <ButtonContainer>\n                <Button variant=\"contained\" onClick={props.onCancel}>\n                    Отмена\n                </Button>\n                <Button\n                    disabled={loadingImport}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={async () => {\n                        await assignFlats({\n                            variables: {\n                                data: mapState(matchMap)\n                            }\n                        });\n                    }}\n                >\n                    {loadingImport && <CircularProgress size={30} thickness={5} />}\n                    Импорт\n                </Button>\n            </ButtonContainer>\n        </Paper>\n    );\n}\n","import {useMutation} from '@apollo/react-hooks';\nimport {Button} from '@material-ui/core';\nimport React, {useState} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport {useParams} from 'react-router-dom';\nimport styled from 'styled-components';\nimport {UPLOAD_SPREADSHEET} from '../../../../../graphql/mutations/apartmentComplexMutation';\nimport {DropzoneContainer} from '../../../../shared/components/styled';\nimport {HouseMatch} from '../HouseMatch/HouseMatch';\n\nconst StyledLink = styled.a`\n    text-decoration: none;\n    button {\n        margin-bottom: 8px;\n    }\n`;\n\nfunction CsvDropzone(props: any) {\n    const {getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject} = useDropzone({\n        accept: '.csv',\n        onDrop: (acceptedFiles) => {\n            props.onDrop(acceptedFiles[0]);\n        }\n    });\n\n    return (\n        <div className=\"container\">\n            <StyledLink href={'http://d2wn3f22rkbhe4.cloudfront.net/Template.csv'}>\n                <Button variant=\"outlined\" color=\"primary\">\n                    Скачать пример\n                </Button>\n            </StyledLink>\n            <DropzoneContainer {...getRootProps({isDragActive, isDragAccept, isDragReject})}>\n                <input {...getInputProps()} />\n                <p>Drag 'n' drop some files here, or click to select files</p>\n            </DropzoneContainer>\n        </div>\n    );\n}\n\nexport function ApartmentComplexImport() {\n    const {apartmentComplexUuid} = useParams();\n    const [matching, setMatching] = useState(false);\n    const [uploadFile, {data}] = useMutation(UPLOAD_SPREADSHEET);\n    const handleDrop = async (file: any) => {\n        await uploadFile({\n            variables: {\n                file,\n                uuid: apartmentComplexUuid\n            }\n        });\n\n        setMatching(true);\n    };\n\n    if (matching) {\n        return (\n            <HouseMatch\n                data={data.uploadApartmentComplexFile}\n                apartmentComplexUuid={apartmentComplexUuid || ''}\n                onCancel={() => {\n                    setMatching(false);\n                }}\n            />\n        );\n    }\n\n    return <CsvDropzone onDrop={handleDrop} />;\n}\n","import {useMutation} from '@apollo/react-hooks';\nimport * as React from 'react';\nimport {Fragment} from 'react';\nimport {useParams} from 'react-router';\nimport styled from 'styled-components';\nimport {apartmentComplexDefaultImage} from '../../../../../core/constants';\nimport {UPLOAD_FILE} from '../../../../../graphql/mutations/apartmentComplexMutation';\nimport {APARTMENT_COMPLEX_INFO} from '../../../../../graphql/queries/apartmentComplexQuery';\nimport {ApartmentComplexImages, ImageType, SingleImage} from '../../../../shared/types/apartmentComplex.types';\nimport {ImageDialog} from '../../../Images/ImageDialog/ImageDialog';\n\nconst HouseImage = styled.img`\n    width: 90%;\n    margin: 8px;\n    align-self: center;\n    border: 1px solid #ccc;\n    cursor: pointer;\n`;\n\ninterface Mode {\n    title: string;\n    value: ImageType;\n}\n\ninterface PreviewComponentProps {\n    uuid: string;\n    mode: Mode;\n    images: ApartmentComplexImages;\n}\n\nfunction PreviewComponent(props: PreviewComponentProps) {\n    const [open, setOpen] = React.useState(false);\n    const image: SingleImage = (props.images[props.mode.value] || {\n        uuid: '',\n        downloadUrl: apartmentComplexDefaultImage\n    }) as SingleImage;\n\n    const mutation = useMutation(UPLOAD_FILE, {\n        refetchQueries: [\n            {\n                query: APARTMENT_COMPLEX_INFO,\n                variables: {\n                    uuid: props.uuid\n                }\n            }\n        ]\n    });\n\n    return (\n        <Fragment>\n            <HouseImage\n                src={image.downloadUrl}\n                alt={'ЖК'}\n                onClick={() => {\n                    setOpen(true);\n                }}\n            />\n            <ImageDialog\n                mutation={mutation}\n                setOpen={setOpen}\n                open={open}\n                params={{uuid: props.uuid, mode: props.mode.value}}\n            />\n        </Fragment>\n    );\n}\n\ninterface MainApartmentComplexImagesProps {\n    images: ApartmentComplexImages;\n}\n\nexport function MainApartmentComplexImages({images}: MainApartmentComplexImagesProps) {\n    const {apartmentComplexUuid} = useParams();\n    return (\n        <PreviewComponent\n            images={images}\n            uuid={apartmentComplexUuid as string}\n            mode={{\n                title: 'Изображение',\n                value: ImageType.CHESS_GRID\n            }}\n        />\n    );\n}\n","import {Fab} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport AddIcon from '@material-ui/icons/Add';\nimport * as React from 'react';\nimport {Fragment} from 'react';\nimport styled from 'styled-components';\nimport {ImageType, NamedImage} from '../../../../shared/types/apartmentComplex.types';\nimport {ImagePreview} from '../../../Images/ImagePreview/ImagePreview';\nimport {PhotoDialog} from '../../../Images/PhotoDialog/PhotoDialog';\nimport {MutationTuple, useMutation} from '@apollo/react-hooks';\nimport {DELETE_IMAGE, UPLOAD_FILE} from '../../../../../graphql/mutations/apartmentComplexMutation';\nimport {APARTMENT_COMPLEX_INFO} from '../../../../../graphql/queries/apartmentComplexQuery';\n\ninterface PreviewComponentProps {\n    uuid: string;\n    images: NamedImage[];\n    mode: ImageType;\n}\n\ninterface NewVRImageProps {\n    uuid: string;\n    mode: ImageType;\n    mutation: MutationTuple<any, any>;\n}\n\nconst ButtonContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst StyledFab = styled(Fab)`\n    &.MuiFab-root {\n        width: 140px;\n        height: 140px;\n        .MuiSvgIcon-root {\n            width: 3em;\n            height: 3em;\n        }\n    }\n`;\n\nfunction NewPhoto({uuid, mode, mutation}: NewVRImageProps) {\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <ButtonContainer>\n            <StyledFab\n                color=\"secondary\"\n                aria-label=\"add\"\n                onClick={() => {\n                    setOpen(true);\n                }}\n            >\n                <AddIcon />\n            </StyledFab>\n            <PhotoDialog mutation={mutation} setOpen={setOpen} open={open} params={{uuid, mode}} />\n        </ButtonContainer>\n    );\n}\n\nexport function Photos(props: PreviewComponentProps) {\n    const mutation = useMutation(UPLOAD_FILE, {\n        refetchQueries: [\n            {\n                query: APARTMENT_COMPLEX_INFO,\n                variables: {\n                    uuid: props.uuid\n                }\n            }\n        ]\n    });\n\n    const deleteMutation = useMutation(DELETE_IMAGE, {\n        refetchQueries: [\n            {\n                query: APARTMENT_COMPLEX_INFO,\n                variables: {\n                    uuid: props.uuid\n                }\n            }\n        ]\n    });\n\n    return (\n        <Fragment>\n            <Grid container={true} spacing={3} alignItems=\"center\">\n                <Grid item={true} xs={12} md={3}>\n                    <NewPhoto mutation={mutation} uuid={props.uuid} mode={props.mode} />\n                </Grid>\n                {props.images.map((image) => {\n                    return (\n                        <Grid item={true} xs={12} md={3} key={image.uuid}>\n                            <ImagePreview\n                                deleteMutation={deleteMutation}\n                                uuid={props.uuid}\n                                imageUuid={image.uuid}\n                                mode={props.mode}\n                                url={image.downloadUrl}\n                                title={image.name}\n                            >\n                                {(toggle: (a: boolean) => void, state: boolean, params: any) => {\n                                    return (\n                                        <PhotoDialog\n                                            mutation={mutation}\n                                            setOpen={toggle}\n                                            open={state}\n                                            params={params}\n                                            downloadLink={image.downloadUrl}\n                                        />\n                                    );\n                                }}\n                            </ImagePreview>\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        </Fragment>\n    );\n}\n","import {Fab} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport AddIcon from '@material-ui/icons/Add';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport {ImageType, PreviewImage} from '../../../../shared/types/apartmentComplex.types';\nimport {ImagePreview} from '../../../Images/ImagePreview/ImagePreview';\nimport {VRDialog} from '../../../Images/VRDialog/VRDialog';\nimport {APARTMENT_COMPLEX_INFO} from '../../../../../graphql/queries/apartmentComplexQuery';\nimport {MutationTuple, useMutation} from '@apollo/react-hooks';\nimport {DELETE_IMAGE, UPLOAD_FILE} from '../../../../../graphql/mutations/apartmentComplexMutation';\n\ninterface PreviewComponentProps {\n    uuid: string;\n    images: PreviewImage[];\n    mode: ImageType;\n}\n\ninterface NewVRImageProps {\n    uuid: string;\n    mutation: MutationTuple<any, any>;\n    mode: ImageType;\n}\n\nconst ButtonContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst StyledFab = styled(Fab)`\n    &.MuiFab-root {\n        width: 140px;\n        height: 140px;\n        .MuiSvgIcon-root {\n            width: 3em;\n            height: 3em;\n        }\n    }\n`;\n\nfunction NewVRImage({uuid, mode, mutation}: NewVRImageProps) {\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <ButtonContainer>\n            <StyledFab\n                color=\"secondary\"\n                aria-label=\"add\"\n                onClick={() => {\n                    setOpen(true);\n                }}\n            >\n                <AddIcon />\n            </StyledFab>\n            <VRDialog mutation={mutation} setOpen={setOpen} open={open} params={{uuid, mode}} />\n        </ButtonContainer>\n    );\n}\n\nexport function VRImages(props: PreviewComponentProps) {\n    const mutation = useMutation(UPLOAD_FILE, {\n        refetchQueries: [\n            {\n                query: APARTMENT_COMPLEX_INFO,\n                variables: {\n                    uuid: props.uuid\n                }\n            }\n        ]\n    });\n\n    const deleteMutation = useMutation(DELETE_IMAGE, {\n        refetchQueries: [\n            {\n                query: APARTMENT_COMPLEX_INFO,\n                variables: {\n                    uuid: props.uuid\n                }\n            }\n        ]\n    });\n\n    return (\n        <Grid container={true} spacing={2} alignItems=\"center\">\n            <Grid item={true} xs={12} md={3}>\n                <NewVRImage mutation={mutation} uuid={props.uuid} mode={props.mode} />\n            </Grid>\n            {props.images.map((image) => {\n                return (\n                    <Grid item={true} xs={12} md={3} key={image.uuid}>\n                        <ImagePreview\n                            deleteMutation={deleteMutation}\n                            uuid={props.uuid}\n                            imageUuid={image.uuid}\n                            mode={props.mode}\n                            url={image.previewImageUrl}\n                            title={image.name}\n                        >\n                            {(toggle: (a: boolean) => void, state: boolean, params: any) => {\n                                return (\n                                    <VRDialog\n                                        mutation={mutation}\n                                        setOpen={toggle}\n                                        open={state}\n                                        params={params}\n                                        downloadLink={image.downloadUrl}\n                                    />\n                                );\n                            }}\n                        </ImagePreview>\n                    </Grid>\n                );\n            })}\n        </Grid>\n    );\n}\n","import {gql} from 'apollo-boost';\n\nexport const GET_HISTORY = gql`\n    query getHistory($apartmentComplexId: String!) {\n        getHistory(apartmentComplexId: $apartmentComplexId) {\n            id\n            name\n            timestamp\n            downloadUrl\n        }\n    }\n`;\n","import {useQuery} from '@apollo/react-hooks';\nimport {format, parseISO} from 'date-fns';\nimport {Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from '@material-ui/core';\nimport React from 'react';\nimport {GET_HISTORY} from '../../../../../graphql/queries/fileHistoryQuery';\nimport {useParams} from 'react-router-dom';\n\nexport function ApartmentComplexHistory() {\n    const {apartmentComplexUuid} = useParams();\n    const {data, loading, error} = useQuery(GET_HISTORY, {\n        variables: {\n            apartmentComplexId: apartmentComplexUuid\n        },\n        fetchPolicy: 'cache-and-network'\n    });\n\n    if (error || loading) {\n        return null;\n    }\n\n    if (!data.getHistory) {\n        return null;\n    }\n\n    return (\n        <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Дата</TableCell>\n                        <TableCell>Файл</TableCell>\n                        <TableCell>Скачать</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.getHistory.map((row) => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {format(parseISO(row.timestamp), 'dd.MM.yyyy HH:mm')}\n                            </TableCell>\n                            <TableCell>{row.name}</TableCell>\n                            <TableCell>\n                                <Button variant=\"outlined\" color=\"primary\" target=\"_blank\" href={row.downloadUrl}>\n                                    Скачать\n                                </Button>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import {useQuery} from '@apollo/react-hooks';\nimport {AppBar, Box, Grid, Theme} from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport * as React from 'react';\nimport {Fragment, useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect, Route, Switch, useParams} from 'react-router';\nimport {useRouteMatch} from 'react-router-dom';\nimport {APARTMENT_COMPLEX_INFO} from '../../../../graphql/queries/apartmentComplexQuery';\nimport {setRouteParams, setTitle} from '../../../../redux/actions';\nimport {TitleWithEditIcon} from '../../../shared/components/misc/TitleWithEditIcon';\nimport {StyledNavLink} from '../../../shared/components/styled';\nimport {ApartmentComplexType, ImageType} from '../../../shared/types/apartmentComplex.types';\nimport {HouseList} from '../../HouseList/HouseList';\nimport {ApartmentComplexData} from './ApartmentComplexData/ApartmentComplexData';\nimport {ApartmentComplexImport} from './ApartmentComplexImport/ApartmentComplexImport';\nimport {MainApartmentComplexImages} from './MainApartmentComplexImages/MainApartmentComplexImages';\nimport {Photos} from './Photos/Photos';\nimport {VRImages} from './VRImages/VRImages';\nimport styled from 'styled-components';\nimport {ApartmentComplexHistory} from './ApartmentComplexHistory/ApartmentComplexHistory';\n\nconst StyledPaper = styled(Paper)`\n    display: flex;\n    flex-direction: column;\n`;\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        flexGrow: 1,\n        width: '100%'\n    }\n}));\n\nfunction TabPanel(props: TabPanelProps) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nexport const ApartmentComplexInfo = connect(null, (dispatch) => ({\n    applyParams: (params) => dispatch(setRouteParams(params)),\n    applyTitle: (title) => dispatch(setTitle(title))\n}))(({applyParams, applyTitle}) => {\n    const params = useParams();\n\n    useEffect(() => {\n        applyParams(params);\n        applyTitle('Жилищный комплекс');\n    }, [params]); // eslint-disable-line\n    const classes = useStyles();\n    const [value, setValue] = useState(0);\n    const {path, url} = useRouteMatch();\n    const {apartmentComplexUuid, developerUuid} = useParams();\n    if (!apartmentComplexUuid) {\n        return <Redirect to=\"/\" />;\n    }\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const {loading, error, data} = useQuery<{getApartmentComplex: ApartmentComplexType}>(APARTMENT_COMPLEX_INFO, {\n        fetchPolicy: 'cache-and-network',\n        variables: {\n            uuid: apartmentComplexUuid\n        }\n    });\n\n    if (loading) {\n        return <p>Loading...</p>;\n    }\n    if (error || !data) {\n        return <p>Error :(</p>;\n    }\n\n    if (!data.getApartmentComplex) {\n        return <Redirect to=\"/\" />;\n    }\n\n    const {images, name} = data.getApartmentComplex;\n\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Fragment>\n            <Container maxWidth=\"lg\">\n                <TitleWithEditIcon\n                    title={name}\n                    editUrl={`/developers/${developerUuid}/apartmentComplex/${apartmentComplexUuid}/edit`}\n                />\n                <Grid container={true} spacing={2}>\n                    <Grid item={true} xs={3}>\n                        <StyledPaper>\n                            <MainApartmentComplexImages images={images} />\n                            <List component=\"nav\" aria-label=\"main mailbox folders\">\n                                <StyledNavLink activeClassName=\"Mui-selected\" to={`${url}/info`}>\n                                    <ListItem button={true}>\n                                        <ListItemText primary=\"Информация\" />\n                                    </ListItem>\n                                </StyledNavLink>\n                                <StyledNavLink activeClassName=\"Mui-selected\" to={`${url}/houses`}>\n                                    <ListItem button={true}>\n                                        <ListItemText primary=\"Дома\" />\n                                    </ListItem>\n                                </StyledNavLink>\n                                <StyledNavLink activeClassName=\"Mui-selected\" to={`${url}/import`}>\n                                    <ListItem button={true}>\n                                        <ListItemText primary=\"Импорт помещений\" />\n                                    </ListItem>\n                                </StyledNavLink>\n                                <StyledNavLink activeClassName=\"Mui-selected\" to={`${url}/history`}>\n                                    <ListItem button={true}>\n                                        <ListItemText primary=\"История обновлений\" />\n                                    </ListItem>\n                                </StyledNavLink>\n                            </List>\n                        </StyledPaper>\n                    </Grid>\n                    <Grid item={true} xs={9}>\n                        <div className={classes.root}>\n                            <Switch>\n                                <Route exact={true} path={`${path}/info`}>\n                                    <AppBar position=\"static\" color=\"default\">\n                                        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                                            <Tab label=\"Информация\" />\n                                            <Tab label=\"360\" />\n                                            <Tab label=\"Фото\" />\n                                        </Tabs>\n                                    </AppBar>\n                                    <TabPanel value={value} index={0}>\n                                        <ApartmentComplexData apartmentComplex={data.getApartmentComplex} />\n                                    </TabPanel>\n                                    <TabPanel value={value} index={1}>\n                                        <VRImages\n                                            uuid={apartmentComplexUuid}\n                                            images={images.VR || []}\n                                            mode={ImageType.VR}\n                                        />\n                                    </TabPanel>\n                                    <TabPanel value={value} index={2}>\n                                        <Photos\n                                            uuid={apartmentComplexUuid}\n                                            images={images.PHOTO || []}\n                                            mode={ImageType.PHOTO}\n                                        />\n                                    </TabPanel>\n                                </Route>\n                                <Route path={`${path}/houses`}>\n                                    <HouseList />\n                                </Route>\n                                <Route path={`${path}/import`}>\n                                    <ApartmentComplexImport />\n                                </Route>\n                                <Route path={`${path}/history`}>\n                                    <ApartmentComplexHistory />\n                                </Route>\n                            </Switch>\n                        </div>\n                    </Grid>\n                </Grid>\n            </Container>\n        </Fragment>\n    );\n});\n\nexport default ApartmentComplexInfo;\n","import {House} from './house.types';\n\nexport interface SingleImage {\n    uuid: string;\n    downloadUrl: string;\n}\n\nexport interface NamedImage extends SingleImage {\n    name: string;\n}\n\nexport interface PreviewImage extends NamedImage {\n    previewImageUrl: string;\n}\n\nexport interface City {\n    key: string;\n    displayName: string;\n    districts: District[];\n}\n\nexport interface District {\n    key: string;\n    displayName: string;\n}\n\nexport interface KeyDisplayName {\n    key: string;\n    displayName: string;\n}\n\nexport interface ApartmentComplexDTO {\n    type: KeyDisplayName;\n    name: string;\n    address: string;\n    city: KeyDisplayName;\n    district: KeyDisplayName;\n    class: KeyDisplayName;\n    levels: number;\n    sections: number;\n    price: number;\n    beginDate: string;\n    endDate: string;\n}\n\nexport interface ApartmentComplexImages {\n    CHESS_GRID?: SingleImage;\n    SITE?: SingleImage;\n    MOBILE?: SingleImage;\n    PHOTO?: NamedImage[];\n    VR?: PreviewImage[];\n    HALF_VR?: PreviewImage[];\n}\n\nexport interface ApartmentComplexType {\n    id: string;\n    type: KeyDisplayName;\n    name: string;\n    city: KeyDisplayName;\n    district: KeyDisplayName;\n    class: KeyDisplayName;\n    levels: number;\n    sections: number;\n    price: number;\n    beginDate: string;\n    endDate: string;\n    address: string;\n    images: ApartmentComplexImages;\n    houses: House[];\n}\n\nexport interface ApartmentComplexFormValues {\n    type: KeyDisplayName;\n    name: string;\n    city: City;\n    address: string;\n    district: District;\n    class: KeyDisplayName;\n    levels: string;\n    sections: string;\n    price: string;\n    beginDate: string;\n    endDate: string;\n}\n\nexport enum ImageType {\n    CHESS_GRID = 'CHESS_GRID',\n    SITE = 'SITE',\n    MOBILE = 'MOBILE',\n    PHOTO = 'PHOTO',\n    VR = 'VR',\n    HALF_VR = 'HALF_VR'\n}\n","import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport React, {Fragment} from 'react';\n\nexport function Confirmation(props: any) {\n    const [open, setOpen] = React.useState(false);\n    const [callbackFn, setCallbackFn] = React.useState<any>();\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const confirmFn = (callback: () => void) => {\n        handleClickOpen();\n        setCallbackFn(callback);\n    };\n    return (\n        <Fragment>\n            {props.children(confirmFn)}\n            <ConfirmDialog\n                open={open}\n                title={props.title}\n                text={props.text}\n                cancel={handleClose}\n                accept={() => {\n                    callbackFn();\n                    handleClose();\n                }}\n            />\n        </Fragment>\n    );\n}\n\nfunction ConfirmDialog({open, cancel, accept, text, title}: any) {\n    const heading = title ? title : 'Вы уверены?';\n    const mainText = text ? text : 'Данная операция не сможет быть отменена';\n    return (\n        <Dialog open={open} onClose={cancel} aria-labelledby=\"responsive-dialog-title\">\n            <DialogTitle id=\"responsive-dialog-title\">{heading}</DialogTitle>\n            <DialogContent>\n                <DialogContentText>{mainText}</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    autoFocus={true}\n                    onClick={(event) => {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        cancel();\n                    }}\n                    color=\"primary\"\n                >\n                    Отмена\n                </Button>\n                <Button\n                    onClick={(event) => {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        accept();\n                    }}\n                    color=\"primary\"\n                    autoFocus={true}\n                >\n                    Да\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import * as React from 'react';\nimport {Fragment} from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nexport function CardHeaderWithMenu(props: any) {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const menuOpen = Boolean(anchorEl);\n    const handleMenuClick = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <CardHeader\n            title={props.title}\n            action={\n                <Fragment>\n                    <IconButton aria-label=\"settings\" onClick={handleMenuClick}>\n                        <MoreVertIcon />\n                    </IconButton>\n                    <Menu id=\"long-menu\" anchorEl={anchorEl} keepMounted={true} open={menuOpen} onClose={handleClose}>\n                        {props.children}\n                    </Menu>\n                </Fragment>\n            }\n        />\n    );\n}\n","import React from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport {DropzoneContainer} from '../styled';\n\nexport function StyledDropzone(props: any) {\n    const {getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject} = useDropzone({\n        accept: 'image/*',\n        onDrop: (acceptedFiles) => {\n            props.onDrop(acceptedFiles[0]);\n        }\n    });\n\n    return (\n        <div className=\"container\">\n            <DropzoneContainer {...getRootProps({isDragActive, isDragAccept, isDragReject})}>\n                <input {...getInputProps()} />\n                <p>Drag 'n' drop some files here, or click to select files</p>\n            </DropzoneContainer>\n        </div>\n    );\n}\n","import {CardActionArea} from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport * as React from 'react';\nimport {ImageType} from '../../../shared/types/apartmentComplex.types';\nimport {MutationTuple} from '@apollo/react-hooks';\nimport {CardHeaderWithMenu} from '../../../shared/components/menus/CardHeaderWithMenu';\nimport {StyledCard, StyledCardMedia} from '../../../shared/components/styled';\n\ninterface PreviewComponentProps {\n    uuid: string;\n    imageUuid: string;\n    title?: string;\n    mode: ImageType;\n    deleteMutation: MutationTuple<any, any>;\n    url: string;\n    children: (setOpen: (a: boolean) => void, open: boolean, params: any) => React.ReactNode;\n}\n\nexport function ImagePreview(props: PreviewComponentProps) {\n    const [open, setOpen] = React.useState(false);\n    const [deleteImage] = props.deleteMutation;\n\n    const handleRemove = async () => {\n        await deleteImage({\n            variables: {\n                mode: props.mode,\n                imageId: props.imageUuid,\n                uuid: props.uuid\n            }\n        });\n    };\n\n    return (\n        <StyledCard>\n            <CardHeaderWithMenu title={props.title}>\n                <MenuItem onClick={handleRemove}>Удалить</MenuItem>\n            </CardHeaderWithMenu>\n            <CardActionArea\n                onClick={() => {\n                    setOpen(true);\n                }}\n            >\n                <StyledCardMedia image={props.url} />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" />\n                </CardContent>\n            </CardActionArea>\n            {props.children(setOpen, open, {uuid: props.uuid, mode: props.mode})}\n        </StyledCard>\n    );\n}\n","import Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\n// @ts-ignore\nimport React, {Fragment, useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport {StyledDropzone} from '../../../shared/components/dropzone/Dropzone';\nimport {ImageType} from '../../../shared/types/apartmentComplex.types';\nimport {MutationTuple} from '@apollo/react-hooks/lib/types';\n\nconst EditorContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n`;\n\nexport interface ImageDialogProps {\n    setOpen: (state: boolean) => void;\n    open: boolean;\n    downloadLink?: string;\n    params: {\n        uuid: string;\n        mode: ImageType;\n    };\n    mutation: MutationTuple<any, any>;\n}\n\nconst ImageContainer = styled.div`\n    max-width: 720px;\n    align-self: center;\n`;\nconst StyledImage = styled.img`\n    max-width: 100%;\n`;\n\nexport function PhotoDialog({setOpen, open, params, downloadLink, mutation}: ImageDialogProps) {\n    const [image, setImage] = useState<any>();\n    const [name, setName] = useState<any>();\n    const [previewUrl, setPreviewUrl] = useState(downloadLink);\n\n    useEffect(() => {\n        if (open) {\n            setPreviewUrl(downloadLink);\n        }\n        // eslint-disable-next-line\n    }, [open]);\n    const {uuid, mode} = params;\n\n    const [uploadFile, {loading}] = mutation;\n\n    const handleClose = () => {\n        setTimeout(() => {\n            setImage(undefined);\n            setPreviewUrl(undefined);\n        }, 200);\n        setOpen(false);\n    };\n\n    const handleDrop = (dropped: any) => {\n        setImage(dropped);\n        const reader = new FileReader();\n        reader.readAsDataURL(dropped);\n\n        reader.onloadend = (e) => {\n            setPreviewUrl(reader.result as string);\n        };\n    };\n\n    const onSave = async () => {\n        await uploadFile({\n            variables: {\n                file: image,\n                uuid,\n                mode,\n                name\n            }\n        });\n        handleClose();\n    };\n    return (\n        <Dialog open={open} aria-labelledby=\"form-dialog-title\" fullWidth={true} maxWidth={'md'}>\n            <DialogTitle id=\"form-dialog-title\">Добавить изображение</DialogTitle>\n            <DialogContent>\n                {!previewUrl && <StyledDropzone onDrop={handleDrop} />}\n                {previewUrl && (\n                    <Fragment>\n                        <EditorContainer>\n                            <ImageContainer>\n                                <StyledImage src={previewUrl} />\n                            </ImageContainer>\n                            <div>\n                                <TextField\n                                    label=\"Название\"\n                                    margin=\"normal\"\n                                    value={name}\n                                    onChange={(e) => {\n                                        setName(e.target.value);\n                                    }}\n                                    fullWidth={true}\n                                    variant=\"outlined\"\n                                />\n                            </div>\n                        </EditorContainer>\n                    </Fragment>\n                )}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Отмена\n                </Button>\n                <Button variant=\"contained\" disabled={!image || loading || !name} onClick={onSave} color=\"primary\">\n                    {loading && <CircularProgress size={30} thickness={5} />}\n                    Сохранить\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import {MutationTuple} from '@apollo/react-hooks/lib/types';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\n// @ts-ignore\nimport {Pannellum} from 'pannellum-react';\nimport React, {Fragment, useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport {StyledDropzone} from '../../../shared/components/dropzone/Dropzone';\nimport {ImageType} from '../../../shared/types/apartmentComplex.types';\n\nconst EditorContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n`;\n\nexport interface ImageDialogProps {\n    setOpen: (state: boolean) => void;\n    open: boolean;\n    downloadLink?: string;\n    params: {\n        uuid: string;\n        mode: ImageType;\n    };\n    mutation: MutationTuple<any, any>;\n}\n\nconst panoramaProps = {\n    haov: 180,\n    minYaw: -90,\n    maxYaw: 90\n};\n\nexport function VRDialog({setOpen, open, params, downloadLink, mutation}: ImageDialogProps) {\n    const [image, setImage] = useState<any>();\n    const [name, setName] = useState<any>();\n    const [previewUrl, setPreviewUrl] = useState(downloadLink);\n    const {uuid, mode} = params;\n\n    useEffect(() => {\n        if (open) {\n            setPreviewUrl(downloadLink);\n        }\n        // eslint-disable-next-line\n    }, [open]);\n\n    const [uploadFile, {loading}] = mutation;\n\n    const handleClose = () => {\n        setTimeout(() => {\n            setImage(undefined);\n            setPreviewUrl(undefined);\n            setName(undefined);\n        }, 200);\n        setOpen(false);\n    };\n\n    const handleDrop = (dropped: any) => {\n        setImage(dropped);\n        const reader = new FileReader();\n        reader.readAsDataURL(dropped);\n\n        reader.onloadend = (e) => {\n            setPreviewUrl(reader.result as string);\n        };\n    };\n\n    const onSave = async () => {\n        await uploadFile({\n            variables: {\n                file: image,\n                uuid,\n                mode,\n                name\n            }\n        });\n        handleClose();\n    };\n    const additionalProps = mode === ImageType.HALF_VR ? panoramaProps : {};\n    return (\n        <Dialog open={open} aria-labelledby=\"form-dialog-title\" fullWidth={true} maxWidth={'md'}>\n            <DialogTitle id=\"form-dialog-title\">Добавить изображение</DialogTitle>\n            <DialogContent>\n                {!previewUrl && <StyledDropzone onDrop={handleDrop} />}\n                {previewUrl && (\n                    <Fragment>\n                        <EditorContainer>\n                            <div>\n                                <Pannellum\n                                    width=\"100%\"\n                                    height=\"500px\"\n                                    image={previewUrl}\n                                    pitch={10}\n                                    yaw={180}\n                                    hfov={110}\n                                    autoLoad={true}\n                                    {...additionalProps}\n                                />\n                            </div>\n                            <div>\n                                <TextField\n                                    label=\"Название\"\n                                    margin=\"normal\"\n                                    value={name}\n                                    onChange={(e) => {\n                                        setName(e.target.value);\n                                    }}\n                                    fullWidth={true}\n                                    variant=\"outlined\"\n                                />\n                            </div>\n                        </EditorContainer>\n                    </Fragment>\n                )}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Отмена\n                </Button>\n                <Button variant=\"contained\" disabled={!image || loading || !name} onClick={onSave} color=\"primary\">\n                    {loading && <CircularProgress size={30} thickness={5} />}\n                    Сохранить\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport React, {Fragment} from 'react';\nimport styled from 'styled-components';\nimport {StyledLink} from '../styled';\n\nconst TitleContainer = styled.div`\n    display: inline-flex;\n    align-items: center;\n\n    ${StyledLink} {\n        display: inline-flex;\n        margin-left: 4px;\n    }\n`;\n\ninterface TitleWithEditIconProps {\n    editUrl: string;\n    title: string;\n    children?: any;\n}\n\nexport function TitleWithEditIcon({editUrl, title, children}: TitleWithEditIconProps) {\n    return (\n        <Fragment>\n            <Typography variant=\"h5\" gutterBottom={true}>\n                <TitleContainer>\n                    <div>{title}</div>\n                    <StyledLink to={editUrl}>\n                        <EditIcon color=\"primary\" />\n                    </StyledLink>\n                </TitleContainer>\n            </Typography>\n            {children}\n        </Fragment>\n    );\n}\n","import {MutationTuple} from '@apollo/react-hooks/lib/types';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport 'cropperjs/dist/cropper.css';\nimport React, {Fragment, useState} from 'react';\nimport Cropper from 'react-cropper';\nimport styled from 'styled-components';\nimport {StyledDropzone} from '../../../shared/components/dropzone/Dropzone';\nimport {ImageType} from '../../../shared/types/apartmentComplex.types';\n\nconst EditorContainer = styled.div`\n    display: flex;\n    justify-content: center;\n`;\nconst blobToFile = (theBlob: Blob, fileName: string): File => {\n    return new File([theBlob], fileName);\n};\n\nexport interface ImageDialogProps {\n    setOpen: (state: boolean) => void;\n    open: boolean;\n    params: {\n        uuid: string;\n        mode: ImageType;\n    };\n    mutation: MutationTuple<any, any>;\n}\n\nexport function ImageDialog({setOpen, open, params, mutation}: ImageDialogProps) {\n    const [image, setImage] = useState<any>();\n\n    const {uuid, mode} = params;\n\n    const [uploadFile, {loading}] = mutation;\n    const editor = React.createRef<any>();\n\n    const handleClose = () => {\n        setImage(undefined);\n        setOpen(false);\n    };\n\n    const handleDrop = (dropped: any) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            setImage(reader.result);\n        };\n        reader.readAsDataURL(dropped);\n    };\n\n    const onSave = async () => {\n        if (editor) {\n            const canvasScaled = editor.current.getCroppedCanvas();\n            const blob = await fetch(canvasScaled.toDataURL()).then((res) => res.blob());\n            const file = blobToFile(blob, image?.name);\n            await uploadFile({\n                variables: {\n                    file,\n                    uuid,\n                    mode\n                }\n            });\n            handleClose();\n        }\n    };\n    return (\n        <Dialog open={open} aria-labelledby=\"form-dialog-title\" fullWidth={true} maxWidth={'md'}>\n            <DialogTitle id=\"form-dialog-title\">Добавить изображение</DialogTitle>\n            <DialogContent>\n                {!image && <StyledDropzone onDrop={handleDrop} />}\n                {image && (\n                    <Fragment>\n                        <EditorContainer>\n                            <Cropper\n                                dragMode={'move'}\n                                src={image}\n                                ready={() => {\n                                    editor.current.zoomTo(1);\n                                }}\n                                style={{height: 400, width: '100%'}}\n                                aspectRatio={16 / 9}\n                                preview=\".img-preview\"\n                                ref={editor}\n                            />\n                        </EditorContainer>\n                        <div>\n                            <Typography id=\"discrete-slider\" gutterBottom={true}>\n                                Размер\n                            </Typography>\n                            <Slider\n                                defaultValue={1}\n                                onChange={(e, value: any) => {\n                                    editor.current.zoomTo(value);\n                                }}\n                                aria-labelledby=\"discrete-slider\"\n                                valueLabelDisplay=\"auto\"\n                                step={0.1}\n                                marks={true}\n                                min={0.1}\n                                max={3}\n                            />\n                        </div>\n                        <div>\n                            <Typography id=\"discrete-slider\" gutterBottom={true}>\n                                Выровнять\n                            </Typography>\n                            <Slider\n                                defaultValue={1}\n                                onChange={(e, value: any) => {\n                                    editor.current.rotateTo(value);\n                                }}\n                                aria-labelledby=\"discrete-slider\"\n                                valueLabelDisplay=\"auto\"\n                                step={1}\n                                marks={true}\n                                min={0}\n                                max={360}\n                            />\n                        </div>\n                    </Fragment>\n                )}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Отмена\n                </Button>\n                <Button variant=\"contained\" disabled={!image} onClick={onSave} color=\"primary\">\n                    {loading && <CircularProgress size={30} thickness={5} />}\n                    Сохранить\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n"],"sourceRoot":""}